apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders
  namespace: retail-store-sample
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orders
  template:
    metadata:
      labels:
        app: orders
    spec:
      containers:
      - name: orders
        image: public.ecr.aws/aws-containers/retail-store-sample-orders:0.7.0
        env:
        - name: SPRING_DATASOURCE_URL
          value: jdbc:postgresql://postgres:5432/orders
        - name: SPRING_DATASOURCE_USERNAME
          value: orders
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
        - name: SPRING_RABBITMQ_HOST
          value: rabbitmq
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 45
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: orders
  namespace: retail-store-sample
spec:
  selector:
    app: orders
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP
